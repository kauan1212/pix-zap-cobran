-- Fix the delete_user_complete function to properly delete users
DROP FUNCTION IF EXISTS public.delete_user_complete(text);

CREATE OR REPLACE FUNCTION public.delete_user_complete(user_email text)
RETURNS text
LANGUAGE plpgsql
SECURITY DEFINER
AS $function$
DECLARE
    user_id UUID;
    deleted_count INTEGER := 0;
BEGIN
    -- Verificar se o usu√°rio atual √© admin
    IF NOT EXISTS (
      SELECT 1 FROM profiles 
      WHERE id = auth.uid() AND is_admin = true
    ) THEN
      RAISE EXCEPTION 'Acesso negado: apenas administradores podem deletar usu√°rios';
    END IF;

    -- Pegar o ID do usu√°rio pelo email do perfil
    SELECT id INTO user_id FROM profiles WHERE email = user_email;
    
    IF user_id IS NULL THEN
        RETURN '‚ùå Usu√°rio n√£o encontrado: ' || user_email;
    END IF;
    
    RAISE NOTICE 'üóëÔ∏è Deletando usu√°rio: % (%)', user_email, user_id;
    
    -- Deletar dados relacionados primeiro
    DELETE FROM billings WHERE user_id = user_id;
    GET DIAGNOSTICS deleted_count = ROW_COUNT;
    RAISE NOTICE 'üí≥ Cobran√ßas deletadas: %', deleted_count;
    
    DELETE FROM clients WHERE user_id = user_id;
    GET DIAGNOSTICS deleted_count = ROW_COUNT;
    RAISE NOTICE 'üë• Clientes deletados: %', deleted_count;
    
    DELETE FROM auto_billing_plans WHERE user_id = user_id;
    GET DIAGNOSTICS deleted_count = ROW_COUNT;
    RAISE NOTICE 'ü§ñ Planos de cobran√ßa deletados: %', deleted_count;
    
    DELETE FROM recurring_plans WHERE user_id = user_id;
    GET DIAGNOSTICS deleted_count = ROW_COUNT;
    RAISE NOTICE 'üîÑ Planos recorrentes deletados: %', deleted_count;
    
    -- Deletar perfil do usu√°rio
    DELETE FROM profiles WHERE id = user_id;
    GET DIAGNOSTICS deleted_count = ROW_COUNT;
    RAISE NOTICE 'üë§ Perfil deletado: %', deleted_count;
    
    -- Tentar deletar do auth usando fun√ß√£o do Supabase se dispon√≠vel
    BEGIN
        -- Usar a extens√£o admin_api se estiver dispon√≠vel
        PERFORM extensions.delete_user(user_id);
        RAISE NOTICE 'üîê Usu√°rio da autentica√ß√£o deletado via admin API';
    EXCEPTION 
        WHEN OTHERS THEN
            -- Se n√£o conseguir usar admin API, pelo menos o perfil foi deletado
            RAISE NOTICE '‚ö†Ô∏è Perfil deletado mas usu√°rio auth pode persistir: %', SQLERRM;
    END;
    
    RETURN '‚úÖ Usu√°rio deletado: ' || user_email || ' (Perfil e dados relacionados removidos)';
    
EXCEPTION
    WHEN OTHERS THEN
        RETURN '‚ùå Erro ao deletar usu√°rio: ' || SQLERRM;
END;
$function$;